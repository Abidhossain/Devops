Ubuntu VPS Configuration

SSH into VPS

ssh root@remote_Ip

Create a new user

usermod -aG sudo remote-user

Logout

logout

ssh remote-user@remote_IP

Git Install 

sudo apt install git

Zip & Unzip install

sudo apt install zip unzip


PHP & PHPmyadmin Install

PHP & mysql install

sudo apt install php-cli php-fpm php-mbstring php-curl php-xml php-zip php-mysql

Mysql server install

sudo apt install mysql-server

Mysql access

mysql -u root -p

Check Database

SHOW DATABASES

Create Database 

CREATE DATABASE test;

exit

Nginx Install

sudo apt install nginx

Check Nginx Folder

ll /etc/

Nginx Configuration


sudo nano /etc/nginx/sites-available/default


server {
	listen 80 default_server;
	listen [::]:80 default_server;
	location /phpmyadmin {
            index index.php;
    	}

	root /var/www/html/public;

	index index.html index.htm index.php;

	server_name _;

	location / {
	
		try_files $uri $uri/ /index.php$is_args$args;
	}


	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	}
}

Server restart

sudo service nginx restart
sudo service nginx reload

Nginx open log file

nginx -t // alet Permission denied

Nginx Permission 

sudo nginx -t

Server restart

sudo service nginx restart
sudo service nginx reload













https://devanswers.co/install-secure-phpmyadmin-nginx-ubuntu-20-04/
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin
nginx 403 access 
cd /
cd /etc/nginx/sites-available/
ls
sudo nano default
location /phpmyadmin {
            index index.php;
    }
sudo systemctl restart nginx.service

# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	location /phpmyadmin {
            index index.php;
    	}
	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html/public;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.php;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.php$is_args$args;
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets)
        #	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

